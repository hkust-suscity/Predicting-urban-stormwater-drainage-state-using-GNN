{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["tW_l5yetkC1g"],"authorship_tag":"ABX9TyNlW7F/8tes50bNI1SIZrv7"},"kernelspec":{"name":"ir","display_name":"R"},"language_info":{"name":"R"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"D5HhFJCOlbmQ"},"outputs":[],"source":["library(dplyr)\n","library(tidyr)\n","library(lubridate)\n","devtools::install_github(\"lfduquey/IETD\")\n","library(IETD)\n","library(ggplot2)\n","library(scales)\n","library(tidyverse)"]},{"cell_type":"markdown","source":["##read raw data"],"metadata":{"id":"tW_l5yetkC1g"}},{"cell_type":"code","source":["data <- read.table('saws201807_202306kp.txt', sep = '', col.names = c('Date', 'Time', 'rainfall'), colClasses = 'character', skip = 2, skipNul = TRUE, fill = TRUE, quote = \"\")\n","data$rainfall <- ifelse(data$rainfall == '32767', NA, as.numeric(data$rainfall))\n","data$datetime <- as.POSIXct(paste(data$Date, data$Time), format = \"%Y%m%d %H%M\")\n","df <- data[, c(\"datetime\", \"rainfall\")]\n","df"],"metadata":{"id":"dmIeJh1CttD9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data <- readLines('saws201807_202306kp.txt')\n","data <- data[-(1:2)]\n","data <- strsplit(data, \"\\\\s+\")\n","data <- do.call(rbind, data)\n","colnames(data) <- c('Date', 'Time', 'rainfall')\n","data <- as.data.frame(data)\n","data$rainfall <- ifelse(data$rainfall == \"32767\", NA, as.numeric(data$rainfall))\n","data$datetime <- as.POSIXct(paste(data$Date, data$Time), format = \"%Y%m%d %H%M\")\n","df <- data[, c(\"datetime\", \"rainfall\")]\n","df"],"metadata":{"id":"sZtLlv4Onk4O"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##read processed data by 1_Rainfall_processing.ipynb"],"metadata":{"id":"EMCFEbZekBmc"}},{"cell_type":"code","source":["# Read processed data, for example rainfallkp_2020.txt\n","file_path <- \"/content/rainfallkp_2020.txt\"\n","data <- read.table(file_path, header = TRUE, sep = \"\\t\")\n","data <- data[, 1:2]\n","print(data)\n","\n","# Check the number of rows and columns\n","num_rows <- dim(data)[1]\n","num_cols <- dim(data)[2]\n","cat(\"Number of rows:\", num_rows, \"\\n\")\n","cat(\"Number of columns:\", num_cols, \"\\n\")"],"metadata":{"id":"AIoKZO_c43Ef"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Unit of raw data is in 0.1 mm, now convert to 1 mm\n","data$rainfall <- data$rainfall/10\n","Time_series<-data\n","Time_series"],"metadata":{"id":"gEh403mppHrF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Interpolation for missing data"],"metadata":{"id":"22Qafg3iGV8o"}},{"cell_type":"code","source":["# Create an empty dataframe to store the rows with interpolation\n","interpolated_rows <- data.frame()\n","\n","# Check for missing values in the rainfall column\n","if (sum(is.na(Time_series$rainfall)) > 0) {\n","  # Get the indices of NA values\n","  na_indices <- which(is.na(Time_series$rainfall))\n","\n","  # Loop through the NA indices\n","  for (i in na_indices) {\n","    # Check if there is at least one non-NA value before and after the current NA value\n","    if (!is.na(Time_series$rainfall[i-1]) && !is.na(Time_series$rainfall[i+1])) {\n","      # Interpolate the missing value using linear interpolation\n","      Time_series$rainfall[i] <- (Time_series$rainfall[i-1] + Time_series$rainfall[i+1]) / 2\n","      print(Time_series$rainfall[i])\n","\n","      # Append the row to the interpolated_rows dataframe\n","      interpolated_rows <- rbind(interpolated_rows, Time_series[i, ])\n","    }\n","  }\n","}\n","\n","# Convert the time column to POSIXct format\n","Time_series$DateAndTime <- as.POSIXct(Time_series$DateAndTime, format=\"%Y-%m-%d %H:%M:%S\")\n","\n","# Sort the data frame by time\n","Time_series <- Time_series[order(Time_series$DateAndTime),]\n","\n","# Print the rows with interpolation\n","print(interpolated_rows)"],"metadata":{"id":"z49l0PjnxB8n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Replace NaN with 0\n","Time_series$rainfall[is.na(Time_series$rainfall)] <- 0\n","# Check if there is NaN\n","na_rows <- Time_series[is.na(Time_series$rainfall), ]\n","na_rows\n","# Check for missing values\n","if (length(which(is.na(Time_series[,2]))) >= 1) {\n","  stop(\"There are missing values!\")\n","}"],"metadata":{"id":"19YZjCxS4tds"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ggplot(Time_series,aes(x=DateAndTime,y=rainfall)) +\n","theme_bw()+\n","geom_bar(stat = 'identity',colour=\"black\",lwd=1, fill=\"gray\")+\n","scale_x_datetime(labels = date_format(\"%Y-%m-%d %H\"))+\n","ylab(\"Rainfall depth [mm]\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":437},"id":"wCPlLY696Znj","executionInfo":{"status":"ok","timestamp":1692351348693,"user_tz":-480,"elapsed":83873,"user":{"displayName":"Mengru Li","userId":"13804363442669029506"}},"outputId":"af22a895-c86c-4ca6-fac9-060167561ddd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["plot without title"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAC/VBMVEUAAAABAQECAgIDAwME\nBAQFBQUGBgYHBwcICAgJCQkKCgoLCwsMDAwNDQ0ODg4PDw8QEBARERESEhITExMUFBQVFRUW\nFhYXFxcYGBgZGRkaGhobGxscHBwdHR0eHh4fHx8gICAhISEiIiIjIyMkJCQlJSUmJiYnJyco\nKCgpKSkqKiorKyssLCwtLS0uLi4vLy8wMDAxMTEyMjIzMzM0NDQ1NTU2NjY3Nzc4ODg5OTk6\nOjo7Ozs8PDw9PT0+Pj4/Pz9AQEBBQUFCQkJDQ0NERERFRUVGRkZHR0dISEhJSUlKSkpLS0tM\nTExNTU1OTk5PT09QUFBRUVFSUlJTU1NUVFRVVVVWVlZXV1dYWFhZWVlaWlpbW1tcXFxdXV1e\nXl5fX19gYGBhYWFiYmJjY2NkZGRlZWVmZmZnZ2doaGhpaWlqampra2tsbGxubm5vb29wcHBx\ncXFycnJzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+fn5/f3+AgICBgYGCgoKD\ng4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OUlJSV\nlZWWlpaXl5eYmJiZmZmampqbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWmpqan\np6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3t7e4uLi5\nubm6urq7u7u8vLy9vb2+vr6/v7/AwMDBwcHCwsLDw8PExMTFxcXGxsbHx8fIyMjJycnKysrL\ny8vMzMzNzc3Ozs7Pz8/Q0NDR0dHS0tLT09PU1NTV1dXW1tbX19fY2NjZ2dna2trb29vc3Nzd\n3d3e3t7f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ubn5+fo6Ojp6enq6urr6+vs7Ozt7e3u7u7v\n7+/w8PDx8fHy8vLz8/P09PT19fX29vb39/f4+Pj5+fn6+vr7+/v8/Pz9/f3+/v7////UXW+p\nAAAACXBIWXMAABJ0AAASdAHeZh94AAAgAElEQVR4nO3dCZgcVbnw8ZrMZCFhAgQIEkCEIGFX\nCGsQFKPivYYEjYIkCEgAURBcEb0YEYUP0AsuIIIKfC7IosIFV1CUiAFByQeKlyVIJIBhJkEC\nMWIg9Xx1us6peqv6VFW/k+40of7/58lM13JOVXXXLzMJmSYIiWiNC7p9AkQvh4BE1IaARNSG\ngETUhoBE1IaARNSGgETUhoBE1IaUkD45vbJp06r3GVKdmveQjk18SIfmndahiTv3HHfuruju\nKR8/VEgn/K1yl8GndVO23LLVnZl3+cALnZl4xcrOzPv8wIrOTByueqZDE4cDnborwqWdmviZ\ngRerdvn39OQhkICUBiQRkJQBKQlIIiApA1ISkERAUgakJCCJgKQMSElAEgFJGZCSgCQCkjIg\nJQFJBCRlQEoCkghIyoCUBCQRkJQBKQlIIiApA1ISkERAUgakJCCJgKQMSElAEgFJGZCSgCQC\nkjIgJQFJBCRlQEoCkghIyoCUBCQRkJQBKQlIIiApA1ISkERAUgakJCCJgKQMSElAEgFJGZCS\ngCQCkjIgJQFJBCRlQEoCkghIyoCUBCQRkJQBKQlIIiApA1ISkERAUgakJCCJgKQMSElAEgFJ\nGZCSgCQCkjIgJQFJBCRlQEoCkghIyoCUBCQRkJR1G9JPvvjFS1TzAkkGJG0vV0izgmC8al4g\nyYCkDUg2IMmApA1INiDJgKQNSDYgyYCkDUg2IMmApA1INiDJgKQNSDYgyYCkDUg2IMmApA1I\nNiDJgKQNSDYgyYCkDUg2IMmApA1INiDJgKQNSDYgyYCkDUg2IMmApA1INiDJgKQNSDYgyYCk\nDUg2IMmApA1INiDJgKQNSDYgyYCkDUg2IMmApA1INiDJgKQNSDYgyYCkDUg2IMmApA1INiDJ\ngKTt5QrpHUGwsWpeIMmApO3lCulVQTBMNS+QZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQb\nkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIG\nJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA\n0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDS9jKGFEya9N3W5wWSDEjaXs6Q\nguCrrc8LJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJ\nBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0\nAckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZ\nkLQByQYk2boJ6dh7B6saGKjcZWh1bN5OTdziGY9qQDpXMW3HTrhjz7E755PGjx9/a5tnbu90\nYuLqmZ+cNlRIfEVS1OJXpGE1+or0muhKr27vzOvmVyQgKQJSGpCyAUkRkNKAlA1IioCUBqRs\nQFIEpDQgZQOSIiClASkbkBQBKQ1I2YCkCEhpQMoGJEVASgNSNiApAlIakLIBSRGQ0oCUDUiK\ngJQGpGxAUgSkNCBlA5IiIKUBKRuQFAEpDUjZgKQISGlAygYkRUBKA1I2ICkCUhqQsgFJEZDS\ngJQNSIqAlAakbEBSBKQ0IGUDkiIgpQEpG5AUASkNSNmApAhIaUDKBiRFLULqAdKaBCRtL1dI\nAZDWJCBpA5INSDIgaQOSDUgyIGkDkg1IMiBpA5INSDIgaQOSDUgyIGkDkg1IMiBpA5INSDIg\naQOSDUgyIGkDkg1IMiBpA5INSDIgaQOSDUgyIGkDkg1IMiBpA5INSDIgaQOSDUgyIGkDkg1I\nMiBpA5INSDIgaQOSDUgyIGkDkg1IMiBpA5INSDIgaQOSDUgyIGkDkg1IMiBpA5INSDIgaQOS\nDUgyIGkDkg1IMiBpA5JtTSCdPXbs2GcLt3YK0j1j+/uvMQ/GRVf66fbODSRtQLKtCaRPR4da\nXri1U5Dujo76HfNgw+jBp9o7N5C0AckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZ\nkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0AckG\nJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQByQYkGZC0AckGJBmQtAHJBiQZkLQB\nyQYkGZC0AckGJBmQtAHJBiQZkLSt85B+feSRRz7evFsTpJ9E+5U9iR2GdOaRR5455Pn9fTM6\n6rHmwbDowaHtnRtI2tZ5SJdFd9Gfm3drgnR+tOgBl9RhSPsGwb5Dnt/f56KjTjUPeqIHr2vv\n3EDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYk\nG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDS\nBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5BkQNIGJBuQZEDSBiQbkGRA0gYkG5Bk\nQNK2zkM6J7qLft+8WwzpM+mKdQTSNVdffY9/y2dOPfWSzIqPRkfd0zwwkCa3eKotBiRt6zyk\no6K76Mbm3WJIh6Ur1hFI0Uyn+rf0BcHmmRWHRftuYR4YSBNbPNUWA5I2INmAJAOSNiDZgCQD\nkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmA\nJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg\n2YAkA5I2INmAJFtHIC09/8jDPvFAsggkRUByASn80GkLn/jC7OSOAJIiILmAtPzsSM5Thzzo\nloGkCEguIDX6y4xl7iGQFAHJBSTT8g9cbj7NOyjq8HsHqxoYqNxlaHVs3k5P/OjDDy8yn83t\n9N3GmicWL34i2S2GNCMdd2a0+KcW5h1KH4vmfrRk6ujXnkGwZytTRTOd2LTy8cWLnxyMIG2W\nWTsj2ndz88BA2lpxui3UqVevlaf5yWkKSI+dcHHjS8H86VFH3LesqsHByl2GVsfmHejQxEuX\nxp9HBsFG5vNe0V10fmPNa4JgSrJbDGnvdNxno8X7y+YdWDrkc/p4NPffimc2z7GB1MpU0Uzv\nb1o5OgiOMltGZda+IVqzoXlgIK2vOd/qOnVbtHJfLFFAWjBLfjfCt3aK3Ld2o4JgnPm8X3QX\nXdxYs0cQHJjsFkOako5bl7+1GxMEx5stozJr3xyt2cg8MJD6Nedb3Tryrd2fj7hbLgJJEZBc\nQHr++KsGovjr76EEJBeQFhzS6Ca3DCRFQHIBKR+QFAHJBaR8QFIEJBeQ8gFJEZBcQMoHJEVA\ncgEpH5AUAckFpHxAUgQkF5DyAUkRkFxAygckRUByASkfkBQByQWkfEBSBCQXkPIBSRGQXEDK\nByRFQHIBKR+QFAHJBaR8QFIEJBeQ8gFJEZBcQMoHJEVAcgEpH5AUAckFpHxAUgQkF5DyAUkR\nkFxAygckRUByASkfkBQ5SNHd03N79Hmr6C76aGNNbxAMT3ZbhyFNalrpIA3LrI1+4whGmwcG\n0gjN+VYHJG3rLCTj5EfR502jz+93a3qS3dZhSOObVjpIPZm1u0RrRpoHBlKf5nyrA5I2INmA\nJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg\n2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOS\nNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkjYg2YAkA5I2INmAJAOSNiDZgCQDkrZ1HtK4\n6POxZsVCsybZLYa0RzquFUjPXXjhhX8cwjnNbCukxpumXnvhhd8Pw3e9/e0XhEWQXh3Yd8Q0\nkHqHcNolAUnbOg+pP/p8uFnxIw8k8aalrUBaHO3zhSGc0xZthdT44rJ/EOzVWNo1TCFl76ut\nnB8g2YCkCEguIOUDkiIguYCUD0iKgOQCUj4gKQKSC0j5gKQISC4g5QOSIiC5gJQPSIqA5AJS\nPiApApILSPmApAhILiDlA5IiILmAlA9IioDkAlI+ICkCkgtI+YCkCEguIOUDkiIguYCUD0iK\ngOQCUj4gKQKSC0j5gKQISC4g5QOSIiC5gJQPSIqA5AJSPiApApILSPmApAhILiDlA5IiILmA\nlA9IioDkqhWkffL5RgJJUR7S+tHnw8wKH6Tt03FnRYtlz/MQIS1ZuHBRuHk07pnCXbSQGiYS\nSDuFMaTnmyBtUSdIwe77y3b3fq0CkqI8pFHR5/80K3yQtkjHTYsW/1Ay7xAhvTsIXtH4qvhE\n4S5aSI2LSCBtHMaQ/tgEaePAvvdqLSDdl9nnPiCtaUBy1QrSxAcz+zw40TcSSIqA5KoVpLjl\nTzcqGgkkRUBy1Q3SwreNiV/Vwr/LA5IiILnqBukNG8z+6GmNikYCSRGQXHWDNOb2qpFAUgQk\nV90gjS/7z4CNgKQISK66QfrIWVUjgaQISK66QXr+Tft/9JxGRSOBpAhIrrpBOidwFY0EkiIg\nueoGafOZv334r42KRgJJEZBcdYM0kr9saGdActUN0u4LqkYCSRGQXHWD9Js3/r+KkUBSBCRX\n3SDtv2Ww/taNikYCSRGQXHWDdMBUV9FIICkCkqtukKoDkiIguWoIiR+jaF9ActUNEj9G0daA\n5KobJH6Moq0ByVU3SPwYRVsDkqtukPgxirYGJFfdIPFjFG0NSK66QeLHKNoakFx1g8SPUbS1\nFSuf22mnnS5KIPUG9hb97Esa0iuDYHRu/YE77fTxpp0FpI122ilaGPbHxm8WG/2g9pD4MYq2\ntmLlM9F9MzcDaU+z4fSXNKRXNP9GOj4IZjXtLCCNjq9hXhiOjD59r/aQ+DGKtgYkV90g8WMU\nbQ1IrrpB4sco2hqQXHWDxI9RtDUgueoGiR+jaGtActUNUnVAUgQkV60gjbk/s8/9Y3wjgaQI\nSK5aQeJ/NNbugOSqF6StJsq2AtKaBiRXrSDNyOcbCSRFQHLVClJLAUkRkFxAygckRUByASkf\nkBQByQWkfEBSBCQXkPIBSRGQXEDKByRFQHIBKR+QFAHJVTdIg0eNHxY/JUUjgaQISK66QXpn\nz5Sj5jQqGgkkRUBy1Q3SmI9VjQSSIiC56gZp9A1VI4GkCEiuukF6U+H72bmApAhIrrpBeug1\nP6q4WYGkCEiuWkHaeuutJ24djCp/z4Zj7x2samCgcpeh1bF5OzXx4MAD0X1z+KC5r/5PtGj+\nRnRns/5UsybZK74JN02HHRwt/qpk2nmnnHLKz6N9Pqs7mw2CYNhgXzTuzyVnHP0y/2uf3FOy\nSRDMbNrXXcQ2kY34GsaPGWOkfCxzeab1DSTzoAFJd9pVde7Vq575yWkeSFNlRZD4iqRoxUrz\ndeP1jd+6T4+WG5DMBt9XpHHpuKqvSN83X+H0X5HMTdw4WMVXpOHRLrlnpPQr0tgg15ymr0ij\n6/QVqaWApAhIrrpBmmzftuG6HYtGAkkRkFx1gxTc1fi06swRRSOBpAhIrnpBEk/FHkUjgaQI\nSK56QVrwpWBG498HHffpx4pGAkkRkFz1ghSGBz9YNRJIioDkqhukMPz7Ty6/8md/Lx4JJEVA\nctUN0tPvMv+9LuiZ/VzRSCApApKrbpCOGT7nypuu//qM4MSikUBSBCRX3SBtdGX8+bSNi0YC\nSRGQXHWDNPLJ+POv8v8z3iQgKQKSq26Q9rg9/nzxgUUjgaQISK66Qbplz3nRzfrCj3cufBmB\npAhIrrpB2nfTYMy2264XbLXDpCjfSCApApKrbpD22G9/kW8kkBQByVU3SNUBSRGQXPWDtPL3\nPxwIVxWPBJIiILlqB+kL/UEwP/zkMYWUgKQISK66Qbo0mH5JBOnKvvOKRgJJEZBcdYO024nh\nyghSePr2RSOBpAhIrrpBGnVzDOnnw4tGAkkRkFx1gzT+xhjSNWOLRgJJEZBcdYP0ptf/00Ba\nustbikYCSRGQXHWDdGvvdqcExx49dvhvi0Z2B9LiSy65ZOFahbTi9ttvf2pNJy6E9P74Trvz\n9tsfCj2Q9okW7yiZdw0gmbd+DR6KLm4ws+nO31xyze2PW0jmZ9KWZYeOC4JDmuZzXNavhjSq\nZpDCW3Y3z8Hevy4c2R1IX2rciWsT0j3REa9c04kLIU2J77QNg+CY0APJ3Mk/LZl3DSDdag51\nY/TrmsymDczqcy0k8/jm7NDozF/VNJ/j0lsNqa9ukMJwyT335H43ygQkRUCSV1QzSBUBSRGQ\n5BXVBtIY0UvsDSKBlAlIspccpMOjJg3fb+ahr+2ZfHLRSCApApK8otpAirp2l8bfjP7vDv9T\nNBJIioAkr6hOkHaxT+/XXlM0EkiKgCSvqE6QRtwSf752ZNFIICkCkryiOkGaMLvxafXhmxeN\nBJIiIMkrqhOkucGuHzzrrJN2DD5RNBJIioAkr6hOkFafu7l5DjY5o/AfnwFJEZDkFdUJUkRp\n0Z13LCwZDyRFQJJXVC9IVQFJEZDkFQFJBiRFQJJXBCQZkBQBSV4RkGRAUgQkeUVAkgFJEZDk\nFQFJBiRFQJJXVBtIk2RFI4GkCEjyimoDaf+qN9A3AUkRkOQV1QZSSwFJEZDkFQFJBiRFQJJX\nVBtI/BlJBKRMQPLHn5FkQAKSrzZ8a/fsg0UjgaQISPKK6gjplnG+tabuQPpw9PS/62UOSbxx\nUyuQ+vWQAgdpQvTr7X8cN27cD92mBqTRy8JVt0ZrqyG9bdy4N6WQ8o6CNzdBGlY3SDfNPiD6\nvm7f/k2KRnYH0inR0/+Olzkk8T8AaQVSsAaQDJW33Rl9uMptakAKBsNVv7BT/yI7NAfpdUGw\nZwmkqbWHdFXQt2UwYVRw0I+LRgJJEZDE+FpBmvzW5WHvfau+/IblRSOBpAhIYnytIPXfFP3R\n8d4wPPWkopFAUgQkMb5WkEZFL9/Y28Jw3oSikUBSBCQxvlaQdn/n8+HOnwrDG8YUjQSSIiCJ\n8bWC9O1ganhG7/FnbjGlaCSQFAFJjK8VpPCqc8IVbw6Cre4qGgkkRUAS4+sD6bEV4V+fNw8e\nuv/fhSOBpAhIYnx9II26MQwKvxK5gKQISGJ8fSCt957bgm/MsxWNBJIiIInx9YE0Sz4XRSOB\npAhIYnx9IK266Ypg7uW2opFAUgQkMb4+kKKmPlA1EkiKgCTG1wpSdUBSBCQxvlaQlhw9YVj8\nXBSNBJIiIInxtYL0rr6pR89pVDQSSIqAJMbXCtLG11eNBJIiIInxtYI0+qmqkUBSBCQxvlaQ\nDri1aiSQFAFJjK8VpLv3/l3FSCApApIYXytI+28VjN66UdFIICkCkhhfK0gHTHUVjQSSIiCJ\n8bWCVB2QFAFJjAdSprpA+ml0xP9a04lXrFwYTbPh6pYgDTv6UjfOvHXpdSXztgXSJdGH97lN\nTZA+lx0a3f8jj05P6VVBMKEE0o71hjTp7PCl+ib6ax+SuVdPWNOJV6z8X3NLvdASpCA40o0z\n+323ZN62QDoj+nCw29QE6fjmocEnk8WxQTAmXF0I6ZXlkIbpTruqlxykfS4I90kqGgkkRUCS\nV1QbSKKX2pvoA6np5IDkeilDeqm9iT6Qmk4OSK6XJCTeRN8GpKahQGqON9GXAQlIvngTfWVA\nApIv3kRfGZCA5Is30VcGJCD54k30lQEJSL54E31lQAKSL95EXxmQgORrjf+DLG+iDyQgtedf\nf/+1aCSQFAFJXlF9IP3mLdu95Sfmwb8+t17RSCApApK8otpAmj+855XDe64Jw5+/OuDHKICU\nHwqk5ryQZmywIFyy546PvTPY8ILCPyQBSRGQ5BXVBtKrTgnNT4aO6n3/QPFIICkCkryi2kDq\nuyj68Gjw+vvKRgJJEZDkFdUGUnBZ9OHJ0nfdAJIqIMkrApIMSIqAJK8ISDIgKQKSvKL6QDp9\n/vz5Pw4umG8qGgkkRUCSV1QfSLKikUBSBCR5RbWBNFdWNLI7kN7SuAPXJqTPR0c8YE0nXrHy\nIj+kXUogPXDddeZuu7xk3q/ZAW+pOoEfXnfdgnTJDPmR+TAy+rXXCfIKR+QhHZGdKAdpVBCM\nKIG0Vb0htVR3II2Pnv5RaxXS26IjbrimE69YOdHcUv9ugrRZCaRz4oWvlsz7ITugr+oE+oLg\n5HTJDPlvd7BN948+TJKbMpAOyk6Ug2Q4hC8WQtocSJUBSRGQXEDKByRFQHIBKR+QFAHJBaR8\nQFIEJBeQ8gFJEZBcQMoHJEVAcgEpH5AUAckFpHxAUgQkF5DyAUkRkFxAygckRUByASkfkBQB\nyQWkfEBSBCQXkPIBSRGQXEDKByRFQHIBKR+QFAHJBaR8QFIEJBeQ8gFJEZBcQMoHJEVAcgEp\nH5AUAckFpDBc/JEZYglIioDkAlJ421EXAGmIAckFpPCXT80H0hADkgtIUUAaakByASlMIc07\nKOrwewerGhio3EXbJtHTP3LwiSeeWDLkKZ4sHuw74TdHRxw75IMlEzfec/RJ8+GUaNncRZPM\nhk0bt+3gBkHw7mjJ3X/vaAw6I144t2TekxykqhOIIB2XLpkhn3MH22Sf6MN2clMQPDg4+BO7\n+QAxS/S8B+4S4syFDD4VX0R6/knj3ZakBiQ3cljVaetq/+3mJq6e+clpQ4A0f3rUEfctq2pw\nsHIXbeYddYcvGxME7xnyFNG9+86CTYMDzev2jY643pAPZlu6dFgCaXq0bO6ibezJBEFjedto\nyd1/wxuDPh0vnFIy78kOUtUJRJCOT5fMkM+7g/VvEX0YLTcFwcPLljpIW6TD7nFD9snMtOyp\n+CLS808a4bYkNSAts0/BsKrT1tX+281N7Lkvci0ZCqRG3fnWbiNzm4URpOOGPEX0u+Ssgk2+\nb+0OMLfZkA9mW7GyAelf5sPMMP6+ZjuzwX5r1xMvJpAag+y3dqeVzNuOb+3GmvcVHiM3Zb61\n2yod9ogbMiUzU7gqvgjPt3Yj3JYkvrULgTT0gOQCUrhs4BczBgZWukUgKQKSC0jhnENMN7hF\nICkCkgtI+YCkCEguIOUDkiIguYCUD0iKgOQCUj4gKQKSC0j5gKQISC4g5QOSIiC5gJQPSIqA\n5AJSPiApApILSPmApAhILiDlA5IiILmAlA9IioDkAlI+ICkCkgtI+YCkCEguIOUDkiIguYCU\nD0iKgOQCUj4gKQKSC0j5gKQISC4g5QOSIiC5gJQPSIqA5AJSPiApApILSPm6A2l04+lfm5D2\nio44csgHs61YGSSQ9g4FpLHxnWbuuTAPaVYC6R0HH3yBd943tgFS7wjxW8Vj8bpx0xJIG6TD\nEkjbZWYK7yyE1AukyroDaWTjdVibkPawN/kaJSHtGgpIYxJI5u7KQnprAqk/COZ4553cBkiN\n1rNb/mKXt00grZ8OSyBtmZkp/HEhpGFAqgxIioDkAlI+ICkCkgtI+YCkCEguIOUDkiIguYCU\nD0iKgOQCUj4gKQKSC0j5gKQISC4g5QOSIiC5gJQPSIqA5AJSPiApApILSPmApAhILiDlA5Ii\nILmAlA9IioDkAlI+ICkCkgtI+YCkCEguIOUDkiIguYCUD0iKgOQCUj4gKQKSC0j5gKQISC4g\n5QOSIiC5gJQPSIqA5AJSPiApApILSPmApAhILiDl6yKk76wRpBFBMLFgkw/SxOiIvUM70uF7\n7HFw/EhC2iGM76JtzIaRXki93zDbLKQPtwCp8o4UkP781a+aIXMzd/xwu9FBGrvqavtIvMts\nAml8sgpItnURUvDqNYIUFP8G7oO0qXvl9Q1PRkpI24bxXfRKs6HPCynYyGyzkE5qAVLlaycg\nXRqP+ED2jrcbHaSeVRfaR+ulkySQ+pNVQLIBSQYkIPkCki8gAUkZkHwBCUjKgOQLSEBSBiRf\nQAKSMiD5AhKQlAHJF5CApAxIvoAEJGVA8gUkICkDki8gAUkZkHwBCUjKgOQLSEBSBiRfQAKS\nMiD5AhKQlAHJF5CApAxIvoAEJGVA8gUkICkDki8gAUkZkHwBCUjKgOQLSEBSBiRfQAKSMiD5\nAhKQlAHJF5CApOzlCmmb9YLg3UOeYu1B6vNCMm8Mae6iCYtesJAe90M6KH78nkWL1q+EtGhw\n0aJFK0pPJQfpfRWQvmgfjUwnecjtnb77qllafHnjDKLjA8m0TkDqNa/MiOjXxkOeQglpo6FD\nSu8iC2mp+fCKML6LguCR+L4KNvdD2iR+PDo630pIjS8wVxefSjOkGZk73l1hCunUHLGo37i9\n07dwNkubudX/F0gmIAEJSN6A5AtIQFIGJF9AApIyIPkCEpCUAckXkICkDEi+gAQkZUDyBSQg\nKQOSLyABSRmQfAEJSMqA5AtIQFIGJF9AApIyIPkCEpCUAckXkICkDEi+gAQkZUDyBSQgKQOS\nLyABSRmQfAEJSMqA5AtIQFIGJF9AApIyIPkCEpCUAckXkICkDEi+gAQkZUDyBSQgKQOSLyAB\nSdk6BulD643qP69in2H+l0dTyQvog9Tfbkjm/X5jSHdJSEFYACluD+8RWoYUHXA/+9BC6imF\nFCSQxLUnkHozl5hAOrQJUk/ulZq7G5DytR/S26On9pSKfYb5Xh5dJTB8kNZvN6QxoYP0OwWk\n7b1HaBlStHU3+/DSptu9XZAO8s2ceaWOTacEkg1IrRwJSECqCEitHAlIQKoISK0cCUhAqghI\nrRwJSECqCEitHAlIQKoISK0cCUhAqghIrRwJSECqCEitHAlIQKoISK0cCUhAqghIrRwJSECq\nCEitHAlIQKoISK0cCeVx80QAABLySURBVEhAqghIrRwJSECqCEitHAlIQKoISK0cCUhAqghI\nrRwJSECqCEitHAlIQKoISK0cCUhAqghIrRwJSECqCEitHAlIQKoISK0cCUhAqghIrRwJSECq\nCEitHAlIQKpozn3LqhocrNxFNi16ak+s2CeFpJpaZiYo2DQ40LxuTMn+1Ueyp7m0QSh42HwY\nHS3HkH5uH2zW2PPReECjUWbQKHk3bug9wu7J9ndHv84qPZVX2oezvZDsxjvdiqXvzW2JOj/Z\nfZ/zxCVu6taO9UMSp3FgOmUDku75rMrz6rUn332Ra8m0oUJal78iFQ32fUVaL2jfV6RB8yHz\nFanxIP6KtEh8RWocsFfejSO8R0i/Is2Mfp1aeiruTZ739UKyG9OvSIe7R+kkH0z3/w9xiZsF\n5YnT2D5dw1ckG5AURwJSHJCaA5LiSECKA1JzQFIcCUhxQGoOSIojASkOSM0BSXEkIMUBqTkg\nKY4EpDggNQckxZGAFAek5oCkOBKQ4oDUHJAURwJSHJCaA5LiSECKA1JzQFIcCUhxQGoOSIoj\nASkOSM0BSXEkIMUBqTkgKY4EpDggNQckxZGAFAek5oCkOBKQ4oDUHJAURwJSHJCaA5LiSECK\nA1JzQFIcCUhxQGoOSIojASkOSM0BSXEkIMUBqTkgKY4EpDggNQckxZGAFAek5toPaf+XPaTF\nfkgbxpB+9c0SSMO9R3htsn2X6NcxpadiIS3YpQzSgjJI7033f6O4xPVbhfQ/Ww5bO5D+cMcd\nD7dz4nUM0qiXJKSRbYQ03w8piCFtnbuvh/nu9GwTM3es/22N3als7BuSn/7HZZD2TvefJC6x\nqmT8dnJNJyFtGgSz2zkxkHyVDAYSkHwByVfJYCAByReQfJUMBhKQfAHJV8lgIAHJF5B8lQwG\nEpB8AclXyWAgAckXkHyVDAYSkHwByVfJYCAByReQfJUMBhKQfAHJV8lgIAHJF5B8lQwGEpB8\nAclXyWAgAckXkHyVDAYSkHwByVfJYCAByReQfJUMBhKQfAHJV8lgIAHJF5B8lQwGEpB8AclX\nyWAgAckXkHyVDAYSkHwByVfJYCAByReQfJUMBhKQfAHJV8lgIAHJF5B8lQwGEpB8AclXyWAg\nAcnXOgbJvLNoS5Byr6+ygsHRzMNSSG8ZP35G/MgPadL48R9UHMlC+pb5MDJ0fs7OQPpVf+7m\n6/Hd6dmyKkZ79vja+PHjn5SQRnpv9mZIb25+ojdP9+8Xl1hVGJ3CXLNz8taxydWV0B9CCaTo\ntdylnRMDyVfBYPPCppAmB8EB8aMR3rt4oyA4WnEkC+nr5kMKaW4G0s/GyJsvHAKkUZ49vhCt\nXywhDffe7M2Q3tj8RIs3+R4jLrGq1dGvD5udmyFNqHwONSWQopl3aOfEQPJVMBhIJiD5ApKv\ngsFAMgHJF5B8FQwGkglIvoDkq2AwkExA8gUkXwWDgWQCki8g+SoYDCQTkHwByVfBYCCZgOQL\nSL4KBgPJBCRfQPJVMBhIJiD5ApKvgsFAMgHJF5B8FQwGkglIvoDkq2AwkExA8gUkXwWDgWQC\nki8g+SoYDCQTkHwByVfBYCCZgOQLSL4KBgPJBCRfQPJVMBhIJiD5ApKvgsFAMgHJF5B8FQwG\nkglIvoDkq2AwkExA8gUkXwWDgWQCki8g+SoYDCQTkHwByVfBYCCZgORrHYPUQFIhqU2QNthU\nrnlnT0/Pu8zq7SYe0VjxwhzzMg82Hvd57+LCWzvp6TlzzJRz5pkFC2lE4+P2S/OQDjYfTpNv\n3WgGZSD5r3fjrIYHcpu/vf325u1rf9k43+Hp5TfnLuZit2LVrs0HFifYG/5x+6032H+Of7Zs\nBtK0cPGc/0hevOTq+pK544tdXfRs3jBnzpyVxU/2/GjzIiDZGs/l68r3aROk7HDz+7p9O90t\nGiuebzz+a+Nxb1AAqeIMFtvz/IZZsJBsi/KQGh3aJ3Yxg1qANCazS/Dr3OYPxau/I+H7b3Z3\nhZ91K1Zt23zgPrn/j/wTeXox+jU5vNd7dcnc8WLzO0bb5kYbnyl+sr8dbf4DkGxA8t1qpdcL\npDggyYDku9VKrxdIcUCSAcl3q5VeL5DigCQDku9WK71eIMUBSQYk361Wer1AigOSDEi+W630\neoEUByQZkHy3Wun1AikOSDIg+W610usFUhyQZEDy3Wql1wukOCDJgOS71UqvF0hxQJIByXer\nlV4vkOKAJAOS71YrvV4gxQFJBiTfrVZ6vUCKA5IMSL5brfR6gRQHJBmQfLda6fUCKQ5IMiD5\nbrXS6wVSHJBkQPLdaqXXC6Q4IMmA5LvVSq8XSHFAkgHJd6uVXi+Q4oAkA5LvViu9XiDFAUkG\nJN+tVnq9QIoDkgxIvlut9HqBFAckGZB8t1rp9QIp7uUN6clvf/f6waKNt19//a25VY2nsnfL\n7c/9h1tz0cgRPT29m9mlP2zY15feXE039/Lrr79+kVvo7enpmdF4R8Gno9WLo89XTJky5a7k\nMMGIEZs929hz5xEjzKRu4sN3NkMbD8fFM3mO9Y+G556evt7+/is8F/dIdMyb7YQnmRVZSMNG\nxAfY75bnBJYJEs5PwxJIL17/iY032/Lo008/fWRml+C9198pdrvj9E3i1f1b7mBOd1X6LDfV\ns8MHGvfpiW7Fqk2bDnxDr9g//G//RJ4+GJi3ef1c7lq8kKZ9Pnr4r0033nhq9gk17zEZXGQX\npu2ww765G/sj0eZrG5Am9/X1nWtO8Pq/e14Y0d077LDD571bzlmvt3fjx+WaLkO6Pmj+PTLp\noCB4TW5V8jzf7dZsm3kpP5Z9ffIz/imwv/0ncxk/4V3Rg+9Gn3eMPp+cOcz92aPaO0TeLKZe\nz7HuEQN29Vzcl6P1p9jtE82KLKTkKBMf9Nx3jaaEJZDiycx7Dw/Lj5sudjsut+0fvutNW2C2\nTnFLq5K3Nk7mkwfrCWcWTpRvVGP/HXLX4oUUrB89fDxo+q3rn2bbjuK1fS67fedo1fsbkMw8\n8e8BN3peGNGpQfIuzrnGmdHXyDVACoGUBiQZkJpeYBuQAiABKQSSDEiZgAQkIAGpNCDFAakq\nIJUGpDggVQWk0oAUB6SqgFQakOKAVBWQSgNSHJCqAlJpQIoDUlVAKg1IcUCqCkilASkOSFUB\nqTQgxQGpKiCVBqQ4IFUFpNKAFAekqoBUGpDigFQVkEoDUhyQqgJSaUCKA1JVQCoNSHFAqgpI\n2Z794tGzzlySLAIpDkhVASnbWac98vj5JyUzAikOSFUBKdPA9IXRV6VDF7hlIMUBqSogZfrd\nzNXRx5OvdstAigNSVUDK9LNjzMdPXRp9mD896oj7llX03Z6enpuKNr6+p2e33Krkeb7Vrdkm\nXrZLpwSZ8jPOjw73lcxcfzGPfhWtviz6PCla8b7MYe7MHtXeIeJhY3uv51jzxICdPRd3bnTM\nk+32bc2KpUu9R5l4dxZL2r7RoOw2Mf2TjXew9EHqeZvY7ajcxr/5rjdtntmaQFo6ounAfZnn\nZkbhRPkakJa9OnctPdnJHaTo4QOBe+6TnjLbdhKv7RPZ7eZ3yeOWDdp5GpB6vu95YUTm9Rnn\n3bKRGX6FXDM4UD5X1JJpLUN6rxbSssHByl2GVsfmrX7ChtbSpR2ad6BDEy9b2qnneNlAx2bu\n3MTthHRH/K3dtW65/e/93XrLVndm3uUDhW8+vWatWNmZeZ8fWNGZicNVJe+0vWYNdOquSN/7\nu9219Vu7pdMfimac8Se3DCRFQEqrO6TwnFMfWfyZDye3MJAUASmt9pBWXHDU7LOXJYtAUgSk\ntNpDygUkRUBKA1I2ICkCUhqQsgFJEZDSgJQNSIqAlAakbEBSBKQ0IGUDkiIgpQEpG5AUASkN\nSNmApAhIaUDKBiRFQEoDUjYgKQJSGpCyAUkRkNKAlA1IioCUBqRsQFIEpDQgZQOSIiClASkb\nkBQBKQ1I2YCkCEhpQMoGJEVASgNSNiApAlIakLIBSRGQ0oCUDUiKgJQGpGxAUgSkNCBlA5Ii\nIKUBKRuQFAEpDUjZgKQISGlAygYkRUBKA1I2ICkCUhqQsgFJEZDSgJQNSIqAlAakbEBSBKQ0\nIGU74UtXVHXx1yp3GVpfu7wz8379om91ZuLLvtGZeb950WWdmfiKb329QxNfcVGn7oorLu7U\nxF+/qPKG++aQIf3mB5Udd2r1PkPq6g7Ne8axV3Zm4muv7cy8lxx7dmcm/sF1nXqOfzCnU3dF\nx26LH5x+7Pcq9/n5UCG10H6z2j5lZ5s7+dFun4Ku2yd/vdunoG7v93T7DNR9ZPKgYm8gAWlt\nBCR1QOp0QForAUkZkNZCQCKi6oBE1IaARNSGgETUhlqCtPT8Iw/7xANh+OwXj5515pLm5UbJ\nwuKPzEhG+la6dZnR7U13wmF4yyHzu3vCqjO+95BGN3X3jFs7ZXdWlbdKV0+58p6tPuWWIH3o\ntIVPfGH2yvCs0x55/PyTXmxabuQWbjvqgvT4vpVuXWZ0e1OdcBg+/Z6ZDlKXTlh1xv8eiPrz\nu/7W3TNu7ZTdWVXeKl095cp7tvqUW4G0/OzoNXvqkAcHpi+M+B26IL/c2ClZ+OVT85ND+Va6\ndZnR7U13wmF4zjffM7+rJ6w+4zD8r+9194xbO2V3VpW3SldPufKebeGUW/4z0l9mLPvdTPPv\nr0++2rssFtLj+1a6dZnRHaj1E/7dcSsdpG6esOYpDm+bs+olcMaVp+zOqvJW6eoph1X3bAun\n3Cqk5R+4PPzZMebRpy71LcuF9Pi+lW5dZnT7a/2Enz3qntBB6uIJq57iF0+8OXd23Tjj6lN2\nZ1V5q3T1lMOqe7aFU24R0mMnXLw6/Nl7k9kyy/NmzJhxv9jYOJR3ZeP4dp3Y1oEUJ3zhhaGB\n1OUT1j3Ftx3zQtef4lZO2Z1V6a3S9VMOy+7ZFk+5NUgLZt0Yfbwj/lp2bX55xaOPPvqvdGN8\nKO/KUIwS29qf4oTvOWp5A1J3T1j5FJ9pXtIun3Erp+zOqvRW6foph2X3bIun3BKkPx9xt/m0\ndPpDYfjMjD81LecW0q+IvpVuXWZ0m9Oc8HkzZ82aNf2ws7t6wsqn+Ln0T+NdO+OWTtmdVeWt\n0tVTDqvu2RZOuRVIzx9/lfkL15XhOac+svgzH16dX473cgvLBn4xw2wsXOnWZUa3NdUJLzeb\njvzFM908YeVTHC44JP0vLV064xZP2Z1V5a3S1VOuvGerT7kVSAvcfwBcccFRs89e1rQc5xbm\nNDbeULzSrcuMbmu6Eza5v2zo0glrz/jW6auSoV064xZP2Z1V5a3S1VOuvGerT5l/IkTUhoBE\n1IaARNSGgETUhoBE1IaARNSGgETUhoBE1IaA1O3mBlFj9/j4I1U7PjMm+KF3w+FjwvcFrn3C\nfSa1/RypMiB1u7nB6Zddet5ho0Z9K7P6nqZX5uJgo//0zhBBuvUrX/nKB4OZ0cdrwwvO7syJ\nUllA6nZzg8Y/T3psz2E/k6u/3PTK7L77qb2P+WaIIJluDS7owOlRawGp21lI4ROjd4s+XrXX\nev2TrwrDg6Pv0iaH4a/f1L/e7t9sbL8rOPfu4Czz6IDX/fGN/Zu+e0kYrj5zy5G7XJuDZL61\nO+B1t+01asJ5/z5twvpTF4aZeagjAanbOUjhUcHD4feDt99001uDm8IHZwR33R/e0nvgjb84\nMfiC2XxC7+PhbtuYfxY9dau9bl5yXe/RYXhuMPvmq3eZ1Axp6pYH/eGxtwdvOnPxb8a+LczM\nQx0JSN0ugfTl4Cfh2W98Pgyf6ZsdhnPMK7P7dub/zTe9f2UYPtsf/QHpwsD8hPnU4Lfm44Rw\n9YRdogdPDPdAChaE4bxgSrQ4e0xmHupMQOp2CaRvBe4tP7Y8IIa0JDhlZdQlwe/D8LLgujAc\nHPHuaPPU0Wano4eFi4IPmkf7eSCZVQ8HH40+fjRYLuehzgSkbpdAOi/6cvPMGbuM7e0N9o8h\n3eP+TvuHYbjXBk8MDAxMG7k0UrK12T3a4c74z0wzPZDMLn8Nzok+nhY8LeehzgSkbpdAmt4z\nEB7Y+8nb7r1vQgLp2PmNBsIFzsKFAtIdMaRDqyEl81CHAlK3c5D+0jc1fCg4Pnq0apSFtDQ4\n2u31geCqm00TdhWQFgYnmUevrYIk5qEOBaRuZyE9uuPwO8L7gzND87cO+4bhccGqMNx7g6ej\n5Ss/teqfG+wX7/2J4M4U0oubTHwxDB/oqYKUzrOWr61GAanbmX/ZcNmX3jt65HfC8N9bbXHD\nbz/yhjf0/+q5TwdnXhf+evhuV/78v4YfE14efCPe+8Hoa1YCKTwjeMcPvrb15EpIyTzUqYDU\n7Rr/1m7ENieY/ylCeNd+ozd73zM3brLRA4/tPjwCMe/N/cO3P29VOGXMs3b3A/ufSyG98IlX\njNj1RyePaGwpgZTMQ50KSERtCEhEbQhIRG0ISERtCEhEbQhIRG0ISERtCEhEbQhIRG0ISERt\nCEhEbQhIRG3o/wO4k/G8NiMWogAAAABJRU5ErkJggg=="},"metadata":{"image/png":{"width":420,"height":420}}}]},{"cell_type":"markdown","source":["##IETD analysis"],"metadata":{"id":"GAmQ4wxoGlB2"}},{"cell_type":"code","source":["# IETD method 1 - CVA (Coefficient of variation analysis), REFERENCE:https://cran.r-project.org/web/packages/IETD/IETD.pdf\n","Results_CVA<-CVA(Time_series,100)\n","IETD_CVA<-Results_CVA$EITD\n","Results_CVA$Figure"],"metadata":{"id":"X8vMIrXvrNWa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# IETD method 2 - AutoA (Autocorrelation analysis), REFERENCE:https://cran.r-project.org/web/packages/IETD/IETD.pdf\n","Results_AutoA<-AutoA(Time_series,100)\n","IETD_AutoA<-Results_AutoA$EITD\n","Results_AutoA$Figure"],"metadata":{"id":"qFWcoLoKrNzh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# IETD method 2 - AAEA (Average annual number of events analysis), REFERENCE:https://cran.r-project.org/web/packages/IETD/IETD.pdf\n","Results_AAEA<-AAEA(Time_series,100)\n","IETD_AAEA<-Results_AAEA$EITD\n","Results_AAEA$Figure"],"metadata":{"id":"eI2dOuxjrPR2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Extract rainfall events"],"metadata":{"id":"U8uDThCQGp9e"}},{"cell_type":"code","source":["# Extract rainfall with IETD = 3h, rainfall depth threshold = 0.5(default)\n","Rainfall <- drawre(Time_series,IETD=3,Thres=0.5)\n","Rainfall.Characteristics <-Rainfall$Rainfall_Characteristics\n","Rainfall.Events<-Rainfall$Rainfall_Events"],"metadata":{"id":"ILJlQj6JpY0x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["file_path <- \"/content/2018_2023/2020\"\n","dir.create(file_path)\n","# Save rainfall characteristics in csv\n","write.csv(Rainfall.Characteristics, file = paste0(file_path, \"/events_2020.csv\"), row.names = TRUE)\n","# Save extracted rainfall events in csv\n","for (i in seq_along(Rainfall.Events)) {\n","  df <- Rainfall.Events[[i]]\n","  filename <- paste0(\"event\", i, \".csv\")\n","  write.csv(df, file.path(file_path, filename), row.names = FALSE)\n","}"],"metadata":{"id":"DNmQ83-Tpe34"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# creat zip file for download\n","install.packages(\"zip\")\n","library(zip)\n","folder_path <- \"/content/2018_2023\"\n","zip(\"ziprain.zip\", files = folder_path )\n","file.copy(\"ziprain.zip\", \"ziprain_folder.zip\", overwrite = TRUE)"],"metadata":{"id":"B6p6wJ-Dphyw"},"execution_count":null,"outputs":[]}]}